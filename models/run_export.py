import os
from subprocess import Popen, PIPE
import re
import tempfile

local_dir = os.path.dirname(os.path.realpath(__file__))
blender_dir = os.path.expandvars("%programfiles%/Blender Foundation/Blender")

def call(args):
    proc = Popen(args, stdout=PIPE, stderr=PIPE)
    out, err = proc.communicate()
    exitcode = proc.returncode
    #
    return exitcode, out, err

file_list = ['205gti','205gti_bbox']
s = "{:02x}".format(len(file_list))
for blend_file in file_list:
    print("Exporting: {}.blend".format(blend_file))
    fd, path = tempfile.mkstemp()
    try:
        os.close(fd)
        exitcode, out, err = call([os.path.join(blender_dir,"blender.exe"),os.path.join(local_dir,blend_file + ".blend"),"--background","--python",os.path.join(local_dir,"blender_export_uv.py"),"--","--out",path])
        if err:
            raise Exception('Unable to loadt: {}. Exception: {}'.format(blend_file,err))
        print("exit: {} \n out:{}\n err: {}\n".format(exitcode,out,err))
        with open(path, 'r') as outfile:
            s = s + outfile.read()
    finally:
        os.remove(path)

# extra data
# track + actors
s = s + "ff00ff00ff00ff00ff00900008dc0948a10008de09489d0008830911dc12518309489a00830911de12518309489900820911e21251094898008209e4128209489700820986120ad8094a8412830948960041094a851251d9094a831251830948960041094a851251820901d2004183094a831251830948960041094a8512510948d3004183094a831251830948960041094a8512510948d3004183094a831251830948960041094a8512510948d3004183094a831251830948960041094a8512510948d3004183094a831251830948960041094a8512510948d3004183098412518309970041094a85125109489a0008880948af004182098512518209980041094a85125109489800088a0948ae0008820986128209990041094a8512510948920008850911881251830948aa00088309861282099a0041094a85125109489000088509118a1251830948a8000883091185120a09019b0041094a85125109488c00088509118e1251830948a6000883091185120a09019d0041094a85125109488a0008850911901251830948a4000883091185120a09019f0041094a851251094886000883091189120a86094a871251830948a00008091187120a0901a10041094a851251094884000883091189120a88094a8712518309489e0008091187120a0901a30041094a851251094882000883091187120a85090184004183094a8712518309489a0008091185120a830901a50041094a85125109480883091187120a85090186004183094a871251830948980008091185120a830901a70041094a85125182091187120a8309018e004183094a8712510948960008091185120a830901a90041094a8512511187120a83090190004183094a87125109489500820985120a830901ab0041094a8c120a090194004183094a87125109489400820984120a830901ad0082094a8a120a090196004183094a87128209940082098412518309ae0083094a86120a8309019a004183094a84128209940082098512518209ad000883091186125183099c0041830984128209940041094a8512510948ab000809118a125182099d0041820984128209950041094a8512510948a9000809118c125109489d00820984128209960082094a8512820948a70008091187120a4a85125109489c00820984128209960083094a8412830948a600820987120a82094a85125109489b0082098412820996004183094a831251830948a500820984120a83090141094a85125109489a0082098412820997004183094a831251830948a400820984128409820041094a8512510948990082098412820998004183098412518309a400820984128409830041094a8512510948980082098412820999004182098512518209a40082094a8312518309840041094a851251094897008209841282099a0041094a8512510948a30083094a8312518209850041094a851251094896008209841282099b0041094a8512510948a2004183098412510948850041094a851251094895008209841282099c0082094a85128209a3004182098512510948850041094a851251094894008209841282099c0083094a84128209a40041094a8512820948850041094a851251094893008209841282099b000883091184128209980008860948850041094a8412830948850041094a851251094892008209841282099a0008091187128209970008880948850082094a8312518309860041094a8512510948910082098412820948980008091187120a09019600080911861251830948820083094a8312518209870041094a85125109489000820984128b09488c000883091185120a830901970082098812518309480884098412510948870041094a85125109488f0082098412518b09488a000883091185120a8309019800820989125188098512510948870041094a85125109488e0082098f12518e091185120a830901990082098a125187094a8512820948870041094a85125109488d0041094a8f12518c091185120a8309019a00820984120a4a87125185094a8412830948870041094a85125109488d0041094aa0120a09019c0008091183120a82094a87125185094a8312518309880041094a85125109488d0041094a9e120a09019c0008091183120a09014183094a87125183094a8312518209890041094a85125109488d00418b094a90120a8309019d0082098412820982004183094a8712518209118412510948890041094a85125109488d00418b094a8e120a8309019e0082098412820985004183094a8d12510948890041094a85125109489700419209019e000809118412820986004183094a8d12820948890041094a85125109489700419009019e000809118512820989004183094a8a12830948890041094a8512510948c600820985120a09018a004183094a89125183098a0041094a8512510948c500820984120a09018c004185094a87125182098b0041094a851251830948c2008209841282098e004185094a871282098c0041094a851251830948c10082098412820991004183094a861282098d0041094a871251830948be0082098412820992004183094a84120a82098e0041094a871251830948bd0082098412820995004188098f0041094a871251830948bc00820984128209960041860901900041094a871251830948bb00820984128209af004183094a871251830948b800820984128209b0004183094a871251830948b700820984128209b3004183094a871251830948b400820984128209b4004183094a871251830948b300820984128209b7004183094a871251830948b000820984128209b8004183094a871251830948af00820984128209b9004185094a871251830948ac00820984128209ba004185094a871251830948ab00820984128209bd004183094a871251850948a800820984128209be004183094a871251850948a700820984128209c1004183094a871251830948a600820984128209c2004183094a871251830948a500820984128209c5004183094a871251830948a200820984128209c6004183094a871251830948a100820984128209c9004183094a8712518309489e00820984128209ca004183094a8712518309489d00820984128209cd004183094a87125109489c00820984128209ce004183094a87125109489b00820984128209cf004183094a87125109489a00820984128209d0004183094a87125109489900820984128209d3004183094a85125109489800820984128209d4004183094a85128209489700820984128209d70041094a84128309489600820984128209d80082094a83125183099600820984128209d80083094a83125182099600820984128209d80041830984125109489500820984128209d90041820985125109489400820984128209da0041094a851282099400820984128209db0041094a841282099400820984128209dc008209841282099400820984128209dc00820984128209940082098412820948db00820984128209940082098412850948d80082098412820994008209841251850948d70082098412820994008209891251870948d000820984128209940041094a891251870948ce0008820984128209950041094a8f1251870948c60008830984128209960041094a8f1251870948c400088309118412820997004187094a8d1251870948bc00088309118712820998004187094a8d1251870948ba000883091187120a09019f004187094a8d1251870948b0000883091189120a0901a1004187094a8d1251870948ae000883091189120a0901a7004187094a8f1251b0091189120a830901a9004187094a8f1251ae091189120a830901b1004187094abe120a830901b5004187094abc120a830901bd0041be0901c10041bc0901ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00ff00a6000386000282777244412337837762334310840002678477718600038b774777648500468477718600038e775084000235468277738600018e7772850002346777738700478d77728600124577718700178d777687002467738700278e7721354284000157758700178577678b774083000157771086008677568b777283000277777186008677208277735787777283000377777586008577740006660027877772830002777776108500078277024420840004877740830023777776208600777088002331378377428300046777777510920006837770820002678277775310920002837773820047837775329300018377730002847773109300018377730002847770940002837770000284774094000383778300478377209400038377108200026777762094000283772083002677762094000183772083000466649600377775108400222096000355428700970011108700a000a000a000a000a000a00096004440880095000782778800950067827760870094000483777487009400268377762086009400478477208600930004857720860093002784777687009300678277767760870092000283776222880092000483776289009200078377628900920006837762890092000483776089009300837720890086002220222089002777762089008500046667777489000466648a00850026847720890022208a0085002684776295008500278477764094008500278577629400850026857762940085002685776294008500268477764094008400046684777495008400268577629500840026857772950084002685776095008400046684772095008500222482776491000222820022248600224220910046664004777720860002229000026777733777778700477740840034421100111085000267777567771605053404390a33103917321c261a25101c0b150e0d1415200819061e052906331838313837353830342b2020211110041312041114040f11040304020305020603020e1102130e021410020f1402142102152102151f020618020817020918023b0a02390d02390802251c03241a032718033008033307033605032f1d03311e03321e03351d03331f03351e03301903"

# pico-8 map format
# first 4096 bytes -> gfx (shared w/ map)
# second 4096 bytes -> map
if len(s)>=2*8192:
    raise Exception('Data string too long ({})'.format(len(s)))

tmp=s[:8192]
print("__gfx__")
# swap bytes
gfx_data = ""
for i in range(0,len(tmp),2):
    gfx_data = gfx_data + tmp[i+1:i+2] + tmp[i:i+1]
print(re.sub("(.{128})", "\\1\n", gfx_data, 0, re.DOTALL))

map_data=s[8192:]
if len(map_data)>0:
    print("__map__")
    print(re.sub("(.{256})", "\\1\n", map_data, 0, re.DOTALL))

